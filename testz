if not game:IsLoaded() then repeat game.Loaded:Wait() until game:IsLoaded() end
repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game.ReplicatedStorage:FindFirstChild("Remotes");
repeat wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui");
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main");
repeat wait() until game:GetService("Players")
repeat wait() until game:GetService("Players").LocalPlayer.Character:FindFirstChild("Energy")
if not game:IsLoaded() then repeat game.Loaded:Wait() until game:IsLoaded() end

if getgenv().Team == nil then
	getgenv().Team = "Pirates"
end

local function SelectTeam()
    local ChooseTeam = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("ChooseTeam", true)
    local UIController = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("UIController", true)

    if UIController and ChooseTeam then
        for i, v in pairs(getgc()) do
            if type(v) == "function" and getfenv(v).script == UIController then
                local constant = getconstants(v)
                if constant[1] == getgenv().Team and #constant == 1 then
                    v(getgenv().Team)
                end
            end
        end
    end
end

repeat task.wait() if not game.Players.LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") then break end local success, errorMessage = pcall(SelectTeam) if not success then warn("Error in SelectTeam function: " .. errorMessage) end wait(1) until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()

spawn(function()
    while true do wait()
        getgenv().rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(Kick)
            if not _G.TP_Ser and _G.Rejoin then
                if Kick.Name == 'ErrorPrompt' and Kick:FindFirstChild('MessageArea') and Kick.MessageArea:FindFirstChild("ErrorFrame") then
                    game:GetService("TeleportService"):Teleport(game.PlaceId)
                    wait(50)
                end
            end
        end)
    end
end)

local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
	VirtualUser:CaptureController()
	VirtualUser:ClickButton2(Vector2.new())
end)

spawn(function()
	while wait(3) do
		game:GetService'VirtualUser':CaptureController()
	end
end)

local W1
local W2
local W3
if game.PlaceId == 2753915549 then
    W1 = true
elseif game.PlaceId == 4442272183 then
    W2 = true
elseif game.PlaceId == 7449423635 then
    W3 = true
end

spawn(function()
    while task.wait() do
        pcall(function()
            if Weapona == "Melee" then
                Weapon = "Melee"
            elseif Weapona == "Sword" then
                Weapon = "Sword"
            elseif Weapona == "Gun" then
                Weapon = "Gun"
            elseif Weapona == "Blox Fruit" then
                Weapon = "Blox Fruit"
            else
                Weapona = "Melee"
                Weapon = "Melee"
            end
            for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
				if v:IsA("Tool") then
					if v.ToolTip == Weapona then
						Weapon = v.Name
					end
				end
			end
        end)
    end
end) --Weapon
MagX = function(MagDis)
    if MagZ then
        return MagZ(MagDis)
        else
            if (MagDis.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then
                return true
            end
        return false
    end
end

if W1 then
    BossList = {"The Gorilla King","Bobby","Yeti","Mob Leader","Vice Admiral","Warden","Chief Warden","Swan","Magma Admiral","Fishman Lord","Wysper","Thunder God","Cyborg","Saber Expert"}
elseif W2 then
    BossList = {"Diamond","Jeremy","Fajita","Don Swan","Smoke Admiral","Cursed Captain","Darkbeard","Order","Awakened Ice Admiral","Tide Keeper"}
elseif W3 then
    BossList = {"Stone","Island Empress","Kilo Admiral","Captain Elephant","Beautiful Pirate","rip_indra True Form","Longma","Soul Reaper","Cake Queen"}
end
function Bring(pos)
    spawn(function()
        pcall(function()
            local mobs = game:GetService("Workspace").Enemies:GetChildren()  for i = 1, #mobs do local v = mobs[i]
                if not table.find(BossList ,v.Name) and (v.HumanoidRootPart.Position - pos.Position).Magnitude <= 300 then
                    if v.Humanoid:FindFirstChild("Animator") then
                    v.Humanoid.Animator:Destroy()
                    end
                if MagX(v.HumanoidRootPart) then
                    if (v.HumanoidRootPart.Position-pos.Position).Magnitude > 50 then
                        v.HumanoidRootPart.CFrame = pos
                    end
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.Humanoid.Sit = true	
                    v.Humanoid.PlatformStand = true			
                    v.Humanoid:ChangeState(11)
                    v.HumanoidRootPart.CanCollide = false
                    sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius",math.huge)
                    setscriptable(game.Players.LocalPlayer, "SimulationRadius",true)
                    end
                end
            end
        end)
    end)
end --Bring Mob
function Buso()
    if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
    end
end

function TPa(p)
 AllCharacterPart = {}
                    for i,v in pairs(AllCharacterPart) do
                        v.CanCollide = false
                    end
    local distance = (p.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    local speed = 250
    if distance < 200 then
        _G.EasingStyle = Enum.EasingStyle.Exponential
    else
        _G.EasingStyle = Enum.EasingStyle.Linear
    end
    local timeToReach = distance / speed
    local w = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(timeToReach, _G.EasingStyle, Enum.EasingDirection.Out), {CFrame = p})
    w:Play()
    function StopTween()
        w:Cancel()
    end
    if W3 then
        if game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
            if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-12476.080078125, 374.9144592285156, -7566.93701171875)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-12476.080078125, 374.9144592285156, -7566.93701171875)) --Big Mansion
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(5742.9169921875, 610.7672729492188, -268.2395935058594)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(5742.9169921875, 610.7672729492188, -268.2395935058594)) --Hydra Island
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-5076.99853515625, 314.8587341308594, -3151.824951171875)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-5076.99853515625, 314.8587341308594, -3151.824951171875)) --Castle on the Sea
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-11993.580078125, 331.8077087402344, -8844.1826171875)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-11993.580078125, 331.8077087402344, -8844.1826171875)) --Canvender T
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(5314.58203125, 22.53643226623535, -125.94227600097656)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(5314.58203125, 22.53643226623535, -125.94227600097656)) --Canvender H
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X, 60, game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
                StopTween()
            elseif (Vector3.new(-1990.672607421875, 4532.998046875, -14973.6748046875)-p.Position).Magnitude < 1500 and (Vector3.new(-1990.672607421875, 4532.998046875, -14973.6748046875)-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 1500 then --Cake Prince
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2149.209228515625, 80.00882720947266, -12402.974609375)
                StopTween()
            elseif (Vector3.new(28609.388671875, 14896.8505859375, 105.2657241821289)-p.Position).Magnitude > 1500 and (Vector3.new(28609.388671875, 14896.8505859375, 105.2657241821289)-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 1500 then --temple
                TP(CFrame.new(28609.388671875, 14896.8505859375, 105.2657241821289))
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaceV4Progress","Check")
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaceV4Progress","TeleportBack")
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetLastSpawnPoint","GreatTree")
            end
        end
    elseif W2 then
        if game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
            if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(923.2125244140625, 125.40035247802734, 32852.83203125)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(923.2125244140625, 125.40035247802734, 32852.83203125)) --Ghost Ship
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-286.6488037109375, 306.130615234375, 596.5967407226562)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-286.6488037109375, 306.130615234375-40, 596.5967407226562)) --ManSion
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(2283.7080078125, 15.277364730834961, 905.8712158203125)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(2283.7080078125, 15.277364730834961, 905.8712158203125)) --Sawn
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-6505.7294921875, 83.31233978271484, -130.24234008789062)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-6505.7294921875, 83.31233978271484, -130.24234008789062)) --Out Ghost Ship
                StopTween()
            end
        end
    elseif W1 then
        if game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
            if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(3864.6884765625, 5.716391563415527, -1926.214111328125)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(3864.6884765625, 5.716391563415527, -1926.214111328125)) --Gate
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(61163.8515625, 5.650546073913574, 1819.7841796875)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 5.650546073913574, 1819.7841796875)) --Under Water
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-7894.61767578125, 5545.8349609375, -380.29119873046875)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-7894.61767578125, 5545.8349609375+40, -380.29119873046875)) --Sky2
                StopTween()
            elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Position).Magnitude > (Vector3.new(-4607.82275, 872.54248, -1667.55688)-p.Position).Magnitude then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-4607.82275, 872.54248, -1667.55688)) --Sky1
                StopTween()
            end
        end
    end
end

Fast = true 
NeedAttacking = true

getHits = function(Size)
    local Hits = {}
        if nearbymon then
        local Enemies = workspace.Enemies:GetChildren()
        local Characters = workspace.Characters:GetChildren()
        for i=1,#Enemies do local v = Enemies[i]
        local Human = v:FindFirstChildOfClass("Humanoid")
        if Human and Human.RootPart and Human.Health > 0 and dist(Human.RootPart.Position) < Size+5 then
            table.insert(Hits,Human.RootPart)
                end
            end
            for i=1,#Characters do local v = Characters[i]
            if v ~= Client.Character then
            local Human = v:FindFirstChildOfClass("Humanoid")
            if Human and Human.RootPart and Human.Health > 0 and dist(Human.RootPart.Position) < Size+5 then
                table.insert(Hits,Human.RootPart)
                    end
                end
            end
        end
    return Hits
end
Players = game.Players
Client = Players.LocalPlayer
Character = Client.Character:GetChildren()
Char = Client.Character
Root = Char.HumanoidRootPart
RunService = game:GetService("RunService")
vim = game:GetService('VirtualInputManager')
CollectionService = game:GetService("CollectionService")
CurrentAllMob = {}
canHits = {}
require(game.ReplicatedStorage.Util.CameraShaker):Stop()
PC = require(Client.PlayerScripts.CombatFramework.Particle)
RL = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib)
DMG = require(Client.PlayerScripts.CombatFramework.Particle.Damage) 
RigC = getupvalue(require(Client.PlayerScripts.CombatFramework.RigController),2)
Combat =  getupvalue(require(Client.PlayerScripts.CombatFramework),2)
task.spawn(function()
    local stacking = 0
    local printCooldown = 0
    while task.wait(FastDelay) do
        pcall(function()
            nearbymon = false
            table.clear(CurrentAllMob)
            table.clear(canHits)
            local mobs = CollectionService:GetTagged("ActiveRig")
            for i=1,#mobs do local v = mobs[i]
                Human = v:FindFirstChildOfClass("Humanoid")
                if Human and Human.Health > 0 and Human.RootPart and v ~= Char then
                    local IsPlayer = game.Players:GetPlayerFromCharacter(v)
                    local IsAlly = IsPlayer and CollectionService:HasTag(IsPlayer,"Ally"..Client.Name)
                    if not IsAlly then
                        CurrentAllMob[#CurrentAllMob + 1] = v
                        if not nearbymon and (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 65 then
                            nearbymon = true
                        end
                    end
                end
            end
            if nearbymon then
                local Enemies = workspace.Enemies:GetChildren()
                local Players = Players:GetPlayers()
                for i=1,#Enemies do local v = Enemies[i]
                    local Human = v:FindFirstChildOfClass("Humanoid")
                    if Human and Human.RootPart and Human.Health > 0 and (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 65 then
                        canHits[#canHits+1] = Human.RootPart
                    end
                end
                for i=1,#Players do local v = Players[i].Character
                    if not Players[i]:GetAttribute("PvpDisabled") and v and v ~= Client.Character then
                        local Human = v:FindFirstChildOfClass("Humanoid")
                        if Human and Human.RootPart and Human.Health > 0 and (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 65 then
                            canHits[#canHits+1] = Human.RootPart
                        end
                    end
                end
            end
        end)
    end
end)
local Data = Combat
local Blank = function() end
local RigEvent = game:GetService("ReplicatedStorage").RigControllerEvent
local Validator = game.ReplicatedStorage.Remotes.Validator
local Animation = Instance.new("Animation")
local RecentlyFired = 0
local AttackCD = 0
local Controller
local lastFireValid = 0
local MaxLag = 350
fucker = 0.07
TryLag = 0
local resetCD = function()
    local WeaponName = Controller.currentWeaponModel.Name
    local Cooldown = {
        combat = 0.07
    }
    AttackCD = tick() + (fucker and Cooldown[WeaponName:lower()] or fucker or 0.285) + ((TryLag/MaxLag)*0.3)
    RigEvent.FireServer(RigEvent,"weaponChange",WeaponName)
    TryLag += 1
    task.delay((fucker or 0.285) + (TryLag+0.5/MaxLag)*0.3,function()
        TryLag -= 1
    end)
end

task.spawn(function()
    pcall(function()
        local Data = Combat
        local Blank = function() end
        local RigEvent = game:GetService("ReplicatedStorage").RigControllerEvent
        local Animation = Instance.new("Animation")
        local RecentlyFired = 0
        local AttackCD = 0
        local Controller
        local lastFireValid = 0
        local MaxLag = 350
        fucker = 0.07
        TryLag = 0
        local resetCD = function()
            local WeaponName = Controller.currentWeaponModel.Name
            local Cooldown = {
                combat = 0.07
            }
            AttackCD = tick() + (fucker and Cooldown[WeaponName:lower()] or fucker or 0.285) + ((TryLag/MaxLag)*0.3)
            RigEvent.FireServer(RigEvent,"weaponChange",WeaponName)
            TryLag += 1
            task.delay((fucker or 0.285) + (TryLag+0.5/MaxLag)*0.3,function()
                TryLag -= 1
            end)
        end
        if not shared.orl then shared.orl = RL.wrapAttackAnimationAsync end
        if not shared.cpc then shared.cpc = PC.play end
        if not shared.dnew then shared.dnew = DMG.new end
        if not shared.attack then shared.attack = RigC.attack end
        RL.wrapAttackAnimationAsync = function(a,b,c,d,func)
            if not NeedAttacking then
                PC.play = shared.cpc
                return shared.orl(a,b,c,65,func)
            end
            local Radius = (attackm and attackmRadius) or 65
            if canHits and #canHits > 0 then
                PC.play = function() end
                a:Play()
                func(canHits)
                wait(a.length * 0.3)
                a:Stop()
            end
        end
        while RunService.Stepped:Wait() and task.wait() do
            if #canHits > 0 then
                Controller = Data.activeController
                if Controller and Controller.equipped and Controller.currentWeaponModel then
                    if (NeedAttacking and attackm) then
                        if Fast and tick() > AttackCD  then
                            resetCD()
                        end
                        if tick() - lastFireValid > 0.5 or not Fast then
                            Controller.timeToNextAttack = 0
                            Controller.hitboxMagnitude = 65
                            pcall(task.spawn,Controller.attack,Controller)
                            lastFireValid = tick()
                            continue
                        end
                        local AID3 = Controller.anims.basic[3]
                        local AID2 = Controller.anims.basic[2]
                        local ID = AID3 or AID2
                        Animation.AnimationId = ID
                        local Playing = Controller.humanoid:LoadAnimation(Animation)
                        Playing:Play()
                        RigEvent.FireServer(RigEvent,"hit",canHits,AID3 and 3 or 2 or AID2,"")
                        -- AttackSignal:Fire()
                        delay(.3,function()
                            Playing:Stop()
                        end)
                    end
                end
            end
        end
    end)
end)

local library = loadstring(game:HttpGet("https://pst.innomi.net/paste/cpn9yk2dvovz9ef8net2r4qg/raw"))()

local Window = library.Create({
    Title = "Dummy Hub | Fragment", Logo = 16384956178,
    CornerRadius = 2, UISize = {
        X = 600,
        Y = 400
    },UIColor = {
        ['Shadow'] = Color3.fromRGB(26, 26, 29),
        ['MainBackground'] = Color3.fromRGB(26, 26, 29),
        ['Background2'] = Color3.fromRGB(30, 30, 34),
        ['ToggleO'] = Color3.fromRGB(65, 80, 133),
        ['TapButtonColor'] = Color3.fromRGB(161, 161, 163),
        ['DropDownSelect'] = Color3.fromRGB(65, 80, 133),
        ['TextColor'] = Color3.fromRGB(161, 161, 163)
    }
})

local Status_Tab = Window.CreateTap({Title = "Status" ,Icon = ""})
local PageConfig1 = Window.CreateTap({Title = "Setting Farm" ,Icon = ""})
local Shop_Tab = Window.CreateTap({Title = "Shop" ,Icon = ""})

local Main1 = PageConfig1.CreatePage({Side = "Left"})
local Main2 = PageConfig1.CreatePage({Side = "Right"})

local Page1 = Status_Tab.CreatePage({Side = "Left"})
local Page2 = Status_Tab.CreatePage({Side = "Left"})
local Page4 = Status_Tab.CreatePage({Side = "Right"})
local Page3 = Status_Tab.CreatePage({Side = "Right"})

local Shop1 = Shop_Tab.CreatePage({Side = "Left"})
local Shop2 = Shop_Tab.CreatePage({Side = "Right"})

local UpdateTime = Page1.CreateLable({Name = "Time Server : 00:00:00"})
local UpdateDoing = Page1.CreateLable({Name = "Stats : Farm Cake Monster"})
local UpdateCake = Page2.CreateLable({Name = "Cake Prince : 500 / 500"})
local UpdateElite = Page2.CreateLable({Name = "Elite Hunter : 0"})
local UpdateBone = Page2.CreateLable({Name = "Bone : 5000 / 5000"})
local UpdateCocoa = Page2.CreateLable({Name = "Conjured Cocoa : 0 / 10"})
local UpdateMirror = Page2.CreateLable({Name = "Mirror Fractal : 0 / 99"})

Page3.CreateLable({Name = "Name : "..game.Players.localPlayer.Name})
Page3.CreateLable({Name = "Display Name : "..game.Players.localPlayer.DisplayName})
local UpdateBeli = Page3.CreateLable({Name = "Enable Beli : 1B"})
local UpdateFragment = Page3.CreateLable({Name = "Enable Fragment : 1B"})

local UpdateFps = Page4.CreateLable({Name = "Fps : 60"})
local UpdatePing = Page4.CreateLable({Name = "Ping : 20"})

Main1.CreateToggle({
	Name = "Farm Cake Prince",
	Dis = "This function will farm cake prince if dont have any monster",
	Value = false,
	Callback = function(vu)
		Farm_Cake = vu
end})
Main1.CreateToggle({
	Name = "Auto Raid",
	Dis = "This function will farm raid if can buy chip",
	Value = false,
	Callback = function(vu)
		Farm_Raid = vu
end})
Main1.CreateToggle({
	Name = "Auto Pirate Raid",
	Dis = "This function will farm pirate raid",
	Value = false,
	Callback = function(vu)
		Farm_Pirate_Raid = vu
end}):Locker()
Main1.CreateToggle({
	Name = "Farm Elite",
	Dis = "This function will farm elite hunter if spawn",
	Value = false,
	Callback = function(vu)
		Farm_Elite = vu
end})
Main1.CreateToggle({
	Name = "Farm Bone",
	Dis = "This function will only farm bones if they are below 500",
	Value = false,
	Callback = function(vu)
		Farm_Bone = vu
end}):Locker()
Main1.CreateToggle({
	Name = "Bring Fruit",
	Dis = "This function will bring fruit",
	Value = false,
	Callback = function(vu)
		Bring_Fruit = vu
end}):Locker()
Main1.CreateToggle({
	Name = "Kill Boss Riad",
	Dis = "This function will farm boss raid",
	Value = false,
	Callback = function(vu)
		Farm_Boss_Raid = vu
end})

Main2.CreateDropdown({
	Name = "Select Weapon",
	Value = "Melee",
	List = {"Melee","Sword","Gun","Blox Fruit"},
	Callback = function(vu)
		Weapona = vu
end})
Main2.CreateToggle({
	Name = "Auto Active Buso Haki",
	Dis = "This function will open buso haki",
	Value = true,
	Callback = function(vu)
		ActiveBuso = vu
end})
Main2.CreateToggle({
	Name = "Auto Active Ken Haki",
	Dis = "This function will open ken haki",
	Value = true,
	Callback = function(vu)
		ActiveKen = vu
end})
Main2.CreateToggle({
	Name = "Auto Active Race v3",
	Dis = "This function will use race v3",
	Value = true,
	Callback = function(vu)
		ActiveRacev3 = vu
end})
Main2.CreateToggle({
	Name = "Auto Active Race Awakened",
	Dis = "This function will use race v4",
	Value = true,
	Callback = function(vu)
		ActiveRacev4 = vu
end})
Main2.CreateToggle({
    Name = "Tween Safe",
    Dis = "This function will tween hight",
    Value = false,
    Callback = function(vu)
        TweenSafe = vu
end})
Main2.CreateDropdown({
	Name = "Select Safe",
	Value = "Hight",
	List = {"Hight","Low"},
	Callback = function(vu)
		TweenSafeSetting = vu
end})
Main2.CreateToggle({
    Name = "Random Fruit",
    Dis = "This function will spin fruit if can spin",
    Value = true,
    Callback = function(vu)
        SpinFruit = vu
end})
Main2.CreateToggle({
    Name = "Random Suprise",
    Dis = "This function will random suprise if can spin",
    Value = false,
    Callback = function(vu)
        Suprise = vu
end})
Main2.CreateToggle({
	Name = "Summon Soul Ripper",
	Dis = "This function will summon soul ripper",
	Value = false,
	Callback = function(vu)
		Spawn_Soul = vu
end})
local indrafunction = Main2.CreateToggle({
	Name = "Summon Rip Indra",
	Dis = "This function will summon rip indra",
	Value = false,
	Callback = function(vu)
		Spawn_Indra = vu
end}):Locker()
local Doughkingfunction = Main2.CreateToggle({
	Name = "Craft Sweet Cup",
	Dis = "This function will craft sweet cup if got god's chalice",
	Value = false,
	Callback = function(vu)
		Spawn_Dough = vu
end}):Locker()

Shop1.CreateButton({
	Name = "Superhuman",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
end})
Shop1.CreateButton({
	Name = "Death Step",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")
end})
Shop1.CreateButton({
	Name = "Sharkman Karate",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectricClaw")
end})
Shop1.CreateButton({
	Name = "Electric Claw",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate")
end})
Shop1.CreateButton({
	Name = "Dragon Talon",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDragonTalon")
end})
Shop1.CreateButton({
	Name = "Godhuman",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyGodhuman")
end})
Shop1.CreateButton({
	Name = "Sanguine Art",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySanguineArt")
end})

Shop2.CreateButton({
	Name = "Black Leg",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
end})
Shop2.CreateButton({
	Name = "Electro",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
end})
Shop2.CreateButton({
	Name = "Fishman Karate",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
end})
Shop2.CreateButton({
	Name = "Deagon Breath",
	Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","1")
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","2")
end})

-- Script --

local fps = 0
local lastTime = tick()

game:GetService("RunService").RenderStepped:Connect(function()
    local currentTime = tick()
    local deltaTime = currentTime - lastTime
    lastTime = currentTime
    fps = 1 / deltaTime
end)

spawn(function()
	while wait() do
		pcall(function()
			local scripttime = game.Workspace.DistributedGameTime
			local seconds = scripttime%60
			local minutes = math.floor(scripttime/60%60)
			local hours = math.floor(scripttime/3600)
			local tempo = string.format("%02d:%02d:%02d", hours ,minutes, seconds)
			UpdateTime:Set("Tiem Server : "..tostring(tempo))
		end)
	end
end)

function formatNumber(num)
    if num >= 1000000 then
        return string.format("%.2fM", num / 1000000)
    elseif num >= 1000 then
        return string.format("%.2fK", num / 1000)
    else
        return tostring(num)
    end
end

local BL = game:GetService("Players").LocalPlayer.Data.Beli.Value
local FG = game:GetService("Players").LocalPlayer.Data.Fragments.Value
_G.Doing = "N/A"

task.spawn(function()
    while game:GetService("RunService").Stepped:wait() do
		pcall(function()
        	if NoClip then
                AllCharacterPart = {}
                for i,v in pairs(AllCharacterPart) do
                    v.CanCollide = false
                end
				local character = game.Players.LocalPlayer.Character
				for _, v in pairs(character:GetChildren()) do
					if v:IsA("BasePart") then
						v.CanCollide = false
					end
				end
			end
        end)
    end
end)

task.spawn(function()
    while true do wait()
        pcall(function()
            if BodyNoClip or Farm_Cake or Farm_Raid then
                NoClip = true
                if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
                    game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
                end
                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
                    local BodyVelocity = Instance.new("BodyVelocity")
                    BodyVelocity.Name = "BodyVelocity1"
                    BodyVelocity.Parent =  game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                    BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                    BodyVelocity.Velocity = Vector3.new(0, 0, 0)
                end
            else
                StopTween()
                NoClip = false
                if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy()
                end
            end
        end)
    end
end) --Bodyclip


function Material(it)
    for i = 1, #game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory") do local v = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")[i]
		if type(v) == "table" then
			if v.Type == "Material" then
				if v.Name == it then
					return v.Count
				end
			end
		end
	end
	return 0
end
function CheckMonster(Mon)
    for i = 1, #game:GetService("Workspace").Enemies:GetChildren() do local v = game:GetService("Workspace").Enemies:GetChildren()[i]
        if table.find(Mon, v.Name) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            return v
        end
    end
    for i = 1, #game:GetService("ReplicatedStorage"):GetChildren() do local v = game:GetService("ReplicatedStorage"):GetChildren()[i]
        if table.find(Mon, v.Name) and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            return v
        end
    end
end
function EquipWeapon(ToolSe)
	if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
		local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
		wait()
		game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
	end
end
function Kill(target, untildata, doing)
    local targetFarm = target
    BodyNoClip = true
    repeat task.wait()

        _G.Doing = doing
        Buso()
        Bring(targetFarm.HumanoidRootPart.CFrame)

        EquipWeapon(Weapon)
        TP(targetFarm.HumanoidRootPart.CFrame * CFrame.new(0, 40, 0))
        attackm = true
    until not untildata() or targetFarm.Humanoid.Health <= 0 or not targetFarm:FindFirstChild("HumanoidRootPart")
    attackm = false
    BodyNoClip = false
end
function WaitMon(Mob,untildata)
    for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()) do
        if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 1000 then
            if v.Name == Mob or v.Name:match(Mob) then 
                repeat task.wait()
                    TP(v.CFrame * CFrame.new(0,40,0))
                    if CheckMonster({Mob}) or (v.CFrame.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude <= 70 or not untildata then
                        break
                    end
                until false
            end
        else
            if v.Name == Mob then
                TP(v.CFrame * CFrame.new(0,40,0))
            end
        end
    end
end 
function Hop()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X, 22000, game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
    wait(1)
    local _place = game.PlaceId
    local _servers = "https://games.roblox.com/v1/games/".._place.."/servers/Public?sortOrder=Asc&limit=100"
    function ListServers(cursor)
    local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
    return game:GetService("HttpService"):JSONDecode(Raw)
    end
    local Server, Next; repeat
    local Servers = ListServers(Next)
    Server = Servers.data[1]
    Next = Servers.nextPageCursor
    until Server
    game:GetService("TeleportService"):TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
end
function Island(Number)
    for i = 1, #game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren() do local v = game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()[i]
		if v.Name == Number and (v.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 2300 then
		    return v
		end
	end
end
function Killaura()
    for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
		if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
			repeat task.wait()
				sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
				v.Humanoid.Health = 0
				v.HumanoidRootPart.CanCollide = true
				v.HumanoidRootPart.Transparency = 0.5
            until not v.Parent or v.Humanoid.Health <= 0
		end
	end
end
function FarmRaid()
    Killaura()
    if Island("Island 5") then
        v = Island("Island 5")
        _G.Doing = "Auto Raid | Ialand 5"
        TP(CFrame.new(v.CFrame.X, 100, v.CFrame.Z))
    elseif Island("Island 4") then
        v = Island("Island 4")
        _G.Doing = "Auto Raid | Ialand 4"
        TP(CFrame.new(v.CFrame.X, 100, v.CFrame.Z))
    elseif Island("Island 3") then
        v = Island("Island 3")
        _G.Doing = "Auto Raid | Ialand 3"
        TP(CFrame.new(v.CFrame.X, 100, v.CFrame.Z))
    elseif Island("Island 2") then
        v = Island("Island 2")
        _G.Doing = "Auto Raid | Ialand 2"
        TP(CFrame.new(v.CFrame.X, 100, v.CFrame.Z))
    elseif Island("Island 1") then
        v = Island("Island 1")
        _G.Doing = "Auto Raid | Ialand 1"
        TP(CFrame.new(v.CFrame.X, 100, v.CFrame.Z))
    end
end
function PirateRaid()
    for i = 1, #game:GetService("ReplicatedStorage"):GetChildren() do local v = game:GetService("ReplicatedStorage"):GetChildren()[i]
        if not string.find(v.Name, "Brigade") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - Vector3.new(-5543.5327148438, 313.80062866211, -2964.2585449219)).magnitude <= 3000 and not string.find(v.Name, "Boss") and not string.find(v.Name, "Friend") then
            TP(CFrame.new(-5543.5327148438, 313.80062866211, -2964.2585449219))
        end
    end
    if CNotify("pirates are raiding") then
        TP(CFrame.new(-5543.5327148438, 313.80062866211, -2964.2585449219))
        return
    end
    for i = 1, #game:GetService("Workspace").Enemies:GetChildren() do local v = game:GetService("Workspace").Enemies:GetChildren()[i]
        if not string.find(v.Name, "Brigade") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - Vector3.new(-5543.5327148438, 313.80062866211, -2964.2585449219)).magnitude <= 3000 and not string.find(v.Name, "Boss") and not string.find(v.Name, "Friend") then
            return v
        end
    end
    for i = 1, #game:GetService("ReplicatedStorage"):GetChildren() do local v = game:GetService("ReplicatedStorage"):GetChildren()[i]
    spawn(function()
        if not string.find(v.Name, "Brigade") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - Vector3.new(-5543.5327148438, 313.80062866211, -2964.2585449219)).magnitude <= 3000 and not string.find(v.Name, "Boss") and not string.find(v.Name, "Friend") then
                return v
            end
        end)
    end
end
function FindFruit()
    for i = 1, #game:GetService("Workspace"):GetChildren() do local v = game:GetService("Workspace"):GetChildren()[i]
        if string.find(v.Name, "Fruit") then
            return v
        end
    end
end
function TP(p)
    local targetFarm = p
    local settp
    local setp
    if TweenSafeSetting == "Hight" then
        settp = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, targetFarm.Position.Y + 200, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
        setp = CFrame.new(targetFarm.Position.X, targetFarm.Position.Y + 200, targetFarm.Position.Z)
    elseif TweenSafeSetting == "Low" then
        settp = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, 0, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
        setp = CFrame.new(targetFarm.Position.X, 0, targetFarm.Position.Z)
    else
        settp = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, targetFarm.Position.Y + 200, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
        setp = CFrame.new(targetFarm.Position.X, targetFarm.Position.Y + 200, targetFarm.Position.Z)
    end
    if TweenSafe then
        if math.abs(targetFarm.Position.X - game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X) <= 50 and math.abs(targetFarm.Position.Z - game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z) <= 50 then
            StopTween()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = settp
            TPa(setp)
        end
    else
        TPa(p)
    end
end

spawn(function()
    while wait(.1) do
        pcall(function()
            if ActiveBuso then
                if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
                end
            end
            if ActiveKen then
                game:GetService("ReplicatedStorage").Remotes.CommE:FireServer("Ken",true)
            end
            if ActiveRacev3 then
                game:GetService("ReplicatedStorage").Remotes.CommE:FireServer("ActivateAbility")
            end
            if ActiveRacev4 then
                if game:GetService("Players").LocalPlayer.Character:FindFirstChild("RaceEnergy") and game:GetService("Players").LocalPlayer.Character.RaceEnergy.Value >= 1 and not game:GetService("Players").LocalPlayer.Character.RaceTransformed.Value then
                    game:service("VirtualInputManager"):SendKeyEvent(true, "Y", false, game)
                    game:service("VirtualInputManager"):SendKeyEvent(false, "Y", false, game)
                end
            end
            if SpinFruit then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin","Buy")
            end
            if Suprise then
                if game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") then
                    HaveHallow = true
                else
                    HaveHallow = false
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,1)
                end
            end
        end)
    end
end) -- Active Ability

spawn(function()
    while wait(.1) do
        pcall(function()
            local Lv = game:GetService("Players").LocalPlayer.Data.Level.Value
            if Farm_Raid then
                if Lv >= 1100 and game:GetService("Players")["LocalPlayer"].PlayerGui.Main.Timer.Visible == false and game.Players.LocalPlayer.Character.Humanoid.Health > 0 and not Island("Island 5") then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", "Flame")
                end
                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Special Microchip") or game:GetService("Players").LocalPlayer.Character:FindFirstChild("Special Microchip") then
                    _G.Doing = "Start Raid"
                    fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
                    repeat wait(1)
                    until game:GetService("Players")["LocalPlayer"].PlayerGui.Main.Timer.Visible == true or game.Players.LocalPlayer.Character.Humanoid.Health <= 0
                end
            end

            if Island("Island 1") or Island("Island 2") or Island("Island 3") or Island("Island 4") or Island("Island 5") then
                FarmRaid()
            elseif Farm_Cake and CheckMonster({"Dough King","Cake Prince"}) then
                Kill(CheckMonster({"Dough King","Cake Prince"}), function() return Farm_Cake end, "Farm Cake Prince")
            elseif Farm_Elite and CheckMonster({"Urban","Diablo","Deandre"}) then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                Kill(CheckMonster({"Urban","Diablo","Deandre"}), function() return Farm_Elite end, "Farm Elite")
            elseif Spawn_Soul and HaveHallow then
                _G.Doing = "Spawn Soul Ripper"
                TP(CFrame.new(-8932.728515625, 140, 6063.1845703125))
            elseif Farm_Boss_Raid and CheckMonster({"rip_indra True Form","Soul Reaper"}) then
                Kill(CheckMonster({"rip_indra True Form","Soul Reaper"}),function() return Farm_Boss_Raid end, "Farm Boss Raid")
            elseif Bring_Fruit and FindFruit() then
                _G.Doing = "Bring Fruit"
                if FindFruit() then
                    v = FindFruit()
                    if (v.Handle.Position-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude >= 110 then
                        TP(v.Handle.CFrame*CFrame.new(0,1.5,100))
                    else
                        TP(v.Handle.CFrame*CFrame.new(0,1.5,0))
                    end
                end
            elseif Farm_Cake then
                if CheckMonster({"Cookie Crafter","Cake Guard","Baking Staff","Head Baker"}) then
                    Kill(CheckMonster({"Cookie Crafter","Cake Guard","Baking Staff","Head Baker"}), function() return Farm_Cake end, "Farm Monster Cake Prince")
                else
                    TP(CFrame.new(-2091.911865234375, 70.00884246826172, -12142.8359375))
                end
            end
        end)
    end
end) -- Farm

spawn(function()
    while wait(1) do
        pcall(function()
            UpdateFps:Set(string.format("Fps : %.2f", fps))
            UpdatePing:Set(string.format("Ping : %.2f", game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue()).." ms")
        end)
    end
end) -- Update Lable
spawn(function()
    while wait(.1) do
        pcall(function()
            UpdateDoing:Set("Stats : ".._G.Doing)
        end)
    end
end) -- Update Lable
spawn(function()
    while wait(1) do
        pcall(function()
            UpdateBeli:Set("Enable Beli : "..tostring(formatNumber(game:GetService("Players").LocalPlayer.Data.Beli.Value-BL)))
            UpdateFragment:Set("Enable Fragment : "..tostring(formatNumber(game:GetService("Players").LocalPlayer.Data.Fragments.Value-FG)))
        end)
    end
end) -- Update Lable

spawn(function()
    while wait(1) do
        pcall(function()
            UpdateElite:Set("Elite Hunter : "..tostring(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("EliteHunter","Progress")))
            UpdateBone:Set("Bone "..tostring(Material("Bones")).." / 5000")
            UpdateCocoa:Set("Conjured Cocoa : "..tostring(Material("Conjured Cocoa")).." / 10")
            UpdateMirror:Set("Mirror Fractal : "..tostring(Material("Mirror Fractal")).." / 99")
        end)
    end
end) -- Update Lable
spawn(function()
    while wait(1) do
        pcall(function()
            if CheckMonster({"Dough King","Cake Prince"}) then
                UpdateCake:Set("Cake Prince : Spawn!!")
            else
                UpdateCake:Set("Cake Prince : "..tostring(tonumber(string.match(tostring(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")), "%d+"))).." / 500")
            end
        end)
    end
end) -- Update Lable
